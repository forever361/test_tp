
-- 创建用户团队关联表
CREATE TABLE xcheck.user_teams (
  userid INT NOT NULL,
  teamid INT NOT NULL,
  is_owner INT NOT NULL DEFAULT 0,
  FOREIGN KEY (userid) REFERENCES xcheck."user" (user_id),
  FOREIGN KEY (teamid) REFERENCES xcheck.team (team_id),
  PRIMARY KEY (userid, teamid)
);



-- Table: xcheck.role2

-- DROP TABLE IF EXISTS xcheck.role2;

CREATE TABLE IF NOT EXISTS xcheck.role2
(
    role_id integer NOT NULL,
    name character(100) COLLATE pg_catalog."default",
    read character(5) COLLATE pg_catalog."default",
    write character(5) COLLATE pg_catalog."default",
    role_value character(300) COLLATE pg_catalog."default",
    CONSTRAINT role2_pkey PRIMARY KEY (role_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS xcheck.role2
    OWNER to postgres;


3002	DelosUsers                                                                                          	0	1	00001000011
3001	Guest                                                                                               	1	0	00000000010
3000	Admin                                                                                               	0	1	11111111111
3003	ChinaDataSolution                                                                                   	0	1	11100000011

11|11|11|11|11|11|11|11|11|11|11
00|00|00|00|00|00|00|00|00|10|00
00|00|00|00|11|00|00|00|00|11|11
11|11|11|00|00|00|00|00|00|11|11


import os

# 远程文件路径
remote_path = 'new/test/TANOS/50001/csv/123.csv'

# 本地保存目录的根路径
local_root = './'

# 拆分远程路径，创建本地目录结构
remote_directories = remote_path.split('/')
local_path = local_root

for i, directory in enumerate(remote_directories):
    local_path = os.path.join(local_path, directory)
    if i < len(remote_directories) - 1 and not os.path.exists(local_path):
        os.makedirs(local_path)

# 下载文件到本地
local_file_path = os.path.join(local_root, remote_path)

print(f'文件已保存到本地: {local_file_path}')